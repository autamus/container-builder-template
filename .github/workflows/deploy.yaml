name: Deploy Docker Containers
on:

  # This is when you want to deploy your container.
  # This means any push to main. You might want to do a release trigger.
  push:
    branches:
      - main

jobs:
  deploy-images:
    runs-on: ubuntu-latest

    # Define your registry and repository here.
    # These are for the GitHub Container registry, you can also use
    # Quay.io or another OCI registry
    env:
      registry: docker.pkg.github.com
      username: autamus
      repository: container-builder-template     

    strategy:

      # A matrix of Dockerfile paths and associated tags
      # Dockerfile in root builds to tag latest
      matrix:
        dockerfile: [[Dockerfile, latest], [subfolder/Dockerfile, subfolder]]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build ${{ matrix.dockerfile[1] }}
        run: |
          container="${{ env.registry }}/${{ env.username}}/${{ env.repository }}:${{ matrix.dockerfile[1]}}"
          printf "Preparing to build ${container} from ${{ matrix.dockerfile[0] }}"
          if [ ! -f "${{ matrix.dockerfile[0]}}" ]; then
              printf "Dockerfile ${{ matrix.dockerfile[0]}} does not exist"
              exit 1;
          fi
          docker build -f ${{ matrix.dockerfile[0] }} -t ${container} .
          docker images
          echo "container=${container}" >> $GITHUB_ENV

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.registry }}
          username: ${{ env.username }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy ${{ matrix.dockerfile[1] }}
        run: docker push ${{ env.container }}
